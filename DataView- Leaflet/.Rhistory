setwd("C:/Users/klysm/Desktop/UFMG/R/010")
knitr::opts_chunk$set(echo = TRUE)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(sp)
require(rgdal)
require(viridis)
require(leafsync)
dir <- getwd()
setwd(dir)
#Importando base
dados <- read.csv('boston_corrected.csv',sep="\t")
#Criando o Widget de mapa vazio
mapa <- leaflet()
mapa
#Adicionando os tiles - OpenStreetMap padrão
mapa <- leaflet()%>%
addTiles()
mapa
#Adicionando pontos de interesse - O recorte do zoom da área é definido automaticamente com base nas coordenandas dos pontos
mapa <- leaflet() %>%
addTiles() %>%
addMarkers(lng = (dados$LON), lat = (dados$LAT))
mapa
#Criando um mapa a partir de um data frame - Adicionando círculos ao invés de Markers
df <- data.frame(LONG = dados$LON, LAT = dados$LAT )
head(df)
mapa <- leaflet(df) %>%
addTiles() %>%
addCircles(lng = ~LONG, lat = ~LAT)
mapa
#Importando um arquivo espacial ShapeFile
#Referências para encontrar arquivos georreferenciados: https://forest-gis.com/download-de-shapefiles/
#                                                       https://www.cdc.gov/epiinfo/support/downloads/shapefiles.html
#                                                       https://hub.arcgis.com/search
boston.tr <- readOGR(system.file("shapes/boston_tracts.shp",
package="spData")[1])
#Qual variavel queremos analisar ?
resposta <- dados$PTRATIO
#Criando uma paleta de cores - Para consulta https://www.datanovia.com/en/blog/top-r-color-palettes-to-know-for-great-data-visualization/
pal <- colorNumeric("viridis", domain = range(resposta))
#Criando o mapa
mapa <- leaflet(dados) %>%
addTiles()           %>%
addCircleMarkers(
color =  ~pal(resposta),
#radius = 2,              #Podemos ou fixar um tamanho do raio dos círculos, ou fazê-lo variar de acordo com o valor da variável observada
radius = ~resposta,
fillOpacity = 0.7
) %>%
addLegend(pal = pal, values = ~resposta, opacity = 1, title = FALSE)
mapa
#E um heatmap ?
#Utilizando o pacote leaflet.extras
mapa <- leaflet(dados)%>%
addTiles()%>%
addHeatmap(radius = 8)
mapa
#Importando um arquivo espacial ShapeFile
#Referências para encontrar arquivos georreferenciados: https://forest-gis.com/download-de-shapefiles/
#                                                       https://www.cdc.gov/epiinfo/support/downloads/shapefiles.html
#                                                       https://hub.arcgis.com/search
boston.tr <- readOGR(system.file("shapes/boston_tracts.shp",
package="spData")[1])
#Importando um arquivo espacial ShapeFile
#Referências para encontrar arquivos georreferenciados: https://forest-gis.com/download-de-shapefiles/
#                                                       https://www.cdc.gov/epiinfo/support/downloads/shapefiles.html
#                                                       https://hub.arcgis.com/search
require(spData)
boston.tr <- readOGR(system.file("shapes/boston_tracts.shp",
package="spData")[1])
require(spData)
install.packages("spData")
#Importando um arquivo espacial ShapeFile
#Referências para encontrar arquivos georreferenciados: https://forest-gis.com/download-de-shapefiles/
#                                                       https://www.cdc.gov/epiinfo/support/downloads/shapefiles.html
#                                                       https://hub.arcgis.com/search
require(spData)
boston.tr <- readOGR(system.file("shapes/boston_tracts.shp",
package="spData")[1])
#Visualizando um shapefile
mapa <- leaflet(boston.tr) %>%
addTiles() %>%
addPolygons()
mapa
#Qual variavel queremos analisar ?
resposta <- dados$MEDV
#Adicionando cores e labels
pal <- colorNumeric("viridis", domain = range(resposta))
labels <- paste0(unique(dados$TOWN), ": ", resposta)
#Gerando mapa
mapa <- leaflet(boston.tr) %>%
addTiles() %>%
addPolygons(
opacity = .2, weight = 1,color = "white",
fillColor = ~pal(resposta),
fillOpacity = 1,
highlight = highlightOptions(
weight = 2,
color = "black"),
label = labels
)
mapa
#Adicionando legenda
mapa %>%
addLegend(pal = pal, values = ~resposta, opacity = 0.7, title = "Resposta")
